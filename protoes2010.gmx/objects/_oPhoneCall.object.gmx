<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();

if(vk_left != 37 &amp;&amp; vk_down != 40)
   show_error('your assumtion is wrong lol', true);

correct := 0;
nextArr := array_create(10);

/*
gamemaker keycodes: vk_left = 37, vk_down = 40
       +--+
      |38|+
  +--+--+--+
 |37|40|39|+
+--+--+--+|
+--+--+--+
*/
for(var i = 0; i &lt; 10; i++)
   nextArr[i] = irandom_range(vk_left, vk_down);
timeWindow := 120;
remaining := 120;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var iAny = false;

for(var i = vk_left; i &lt;= vk_down; i++)
   iAny |= keyboard_check_pressed(i);
if(keyboard_check_pressed(nextArr[correct%10])) {
   nextArr[correct++%10] = irandom_range(vk_left, vk_down);
   timeWindow = 120*exp(-correct/100);
   remaining = timeWindow;
} else if(iAny)
   remaining -= timeWindow div 2;

if(--remaining &lt;= 0) {
   var t = get_timer();
   while(get_timer() &lt; t + 1000000) {}
   game_end();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var arrows = "&lt;^&gt;v";

draw_set_colour($000000);
for(var i = 0; i &lt; 10; i++)
   draw_text(10, 10 + 20*i, string_char_at(arrows, nextArr[(correct + i)%10] - vk_left + 1));
draw_rectangle(50, 10, 50 + max(0, 100*remaining/timeWindow), 20, false);
draw_text(50, 25, correct);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
