<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();

correct = 0;
wrong = 0;
shield = 2;
time = 300;
timeMax = 300;
timeMp = 0.75 + 0.25*get_difficulty();
timeMpDelta = 0.0125*(3 + get_difficulty());
anim = 0;
wobbleAnim = 0;
wrongAnim = 0;
shotAnim = 0;
sfCrop = -1;
for(var i = 0; i &lt; 3; i++) {
   wobbleX[i] = random_range(0.5, 2);
   wobbleY[i] = random_range(0.5, 2);
   wobbleA[i] = random_range(0.25, 1);
   wobbleXf[i] = random_range(0.5, 3);
   wobbleYf[i] = random_range(0.5, 3);
   wobbleAf[i] = random_range(0.5, 3);
   wobbleXoff[i] = random(2*pi);
   wobbleYoff[i] = random(2*pi);
   wobbleAoff[i] = random(2*pi);
   next[i] = irandom_range(0, 3);
}

show_play = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(surface_exists(sfCrop))
   surface_free(sfCrop);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(o_room_changer)) exit;

var input, inputAll = 0;

for(var i = 0; i &lt; 4; i++) {
   input[i] = keyboard_check_pressed(vk_left + i);
   inputAll |= input[i];
}

time -= timeMp;
if(inputAll)
   if(input[next[0]]) {
      correct++;
      time += 60;
      timeMp += timeMpDelta;
      next[0] = next[1];
      next[1] = next[2];
      next[2] = irandom_range(0, 3);
      with(instance_create(0, 320, o_game_callbox_burst)) {
         var pp;
         pp[0] = 780; pp[1] = 1027; pp[2] = 1177; pp[3] = 1177; pp[4] = 1177;
         var t = min(3, other.anim), tf = frac(t), tw = t - tf;
         x = lerp(pp[tw], pp[tw + 1], tf);
         if(t &lt; 1)
            image_xscale = 1 - 0.4*t;
         else
            image_xscale = 0.8 - 0.2*t;
         image_yscale = image_xscale;
         image_alpha = clamp(3 - t, 0, 1);
      }
      anim++;
   } else {
      wrong++;
      wrongAnim = 21;
      if(shield)
         shield--;
      else
         time -= 60*timeMp;
   }
anim *= 0.75;

timeMax = max(timeMax, time);
wobbleAnim++;
if(wrongAnim != 0)
   wrongAnim--;
if(random(1) &lt; 1/60)
   shotAnim = 3;
else if(shotAnim != 0)
   shotAnim--;

if(time &lt;= 0)
   watasuto_gameover(
      '용건만 간단히',
      0, '어떻게든 파파라치를 따돌린 것 같다...',
      correct, wrong, (correct - wrong)*100,
      80 + round(20*arctan(max(0, correct - 10*wrong)/20)), 0
   );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>background_hspeed[1] = -0.2;
background_vspeed[1] = 0.2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var p, s, a, pp;
pp[0] = 780; pp[1] = 1027; pp[2] = 1177; pp[3] = 1177; pp[4] = 1177;
for(var i = 0; i &lt; 3; i++) {
   var t = min(3, i + anim), tf = frac(t), tw = t - tf;
   p[i] = lerp(pp[tw], pp[tw + 1], tf);
   if(t &lt; 1)
      s[i] = 1 - 0.4*t;
   else
      s[i] = 0.8 - 0.2*t;
   a[i] = clamp(3 - t, 0, 1);
}

for(var i = 2; i &gt;= 0; i--)
   if(a[i] != 0)
      draw_sprite_ext(
         spr_callbox_arrow, next[i] + 4*(i != 0),
         p[i], 320,
         s[i], s[i], 0,
         $ffffff, a[i]
      );

draw_set_colour($0040ff);
draw_set_alpha(1);
draw_rectangle(74, 669, 74 + 1132*max(0, time)/timeMax, 688, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var wx = 0, wy = 36, wa = 0;
for(var i = 0; i &lt; 3; i++) {
   wx += wobbleX[i]*sin(wobbleXf[i]*wobbleAnim/30*pi + wobbleXoff[i]);
   wy += wobbleY[i]*sin(wobbleYf[i]*wobbleAnim/30*pi + wobbleYoff[i]);
   wa += wobbleA[i]*sin(wobbleAf[i]*wobbleAnim/30*pi + wobbleAoff[i]);
}
wy -= 16*sqr(wrongAnim/20);

draw_set_alpha(1);
draw_sprite(spr_game_box, 0, 0, 0);
if (floor(show_play / 30) mod 2) draw_sprite(spr_game_play, 0, 0, 0);
show_play++;

draw_sprite(spr_callbox_grass, 0, 1206, 689);

if(!surface_exists(sfCrop))
   sfCrop = surface_create(1132, 617);
surface_set_target(sfCrop);
draw_clear_alpha($000000, 0);
draw_sprite_ext(
   spr_callbox_character, wrongAnim != 0,
   393 + wx, 617 + wy,
   1, 1, wa,
   $ffffff, 1
);
surface_reset_target();
draw_surface(sfCrop, 74, 72);
if(shotAnim) {
   draw_set_colour($ffffff);
   draw_set_alpha(shotAnim/6);
   draw_rectangle(74, 72, 1205, 688, false);
}

draw_set_alpha(1);
draw_sprite(spr_callbox_callbox, 0, 74, 689);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
