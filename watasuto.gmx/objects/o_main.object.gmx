<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>character_spr = spr_character;
character_blink_eye = 0;
character_blink_eye_ready = 0;
character_sleep = 0;
character_sleep_timer = 180//room_speed * 60 * 3;
character_touch = 0;
character_touch_timer = 80;

left = 40;
top = 35;

character_x = 580;
character_y = 490;

schedule_x = room_width;
schedule_y = room_height;

image_speed = 0;
alarm[0] = 45; // idle
alarm[1] = 120; // eye blinking
alarm[2] = character_sleep_timer // sleep
alarm[3] = 0; // touch
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// character touch end

character_touch = 0;
alarm[2] = character_sleep_timer;
character_spr = spr_character;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// character sleep

character_blink_eye = 0;
character_sleep = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// character blinking eye timer
alarm[1] = irandom_range(180, 240);

character_blink_eye_ready = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// character idle + blinking eye
alarm[0] = 45;

if (character_sleep || !character_blink_eye_ready || !image_index){
    image_index = !image_index;
}else if (!character_touch){
    character_blink_eye_ready = 0;
    character_blink_eye = 1;
    image_index = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// character
var _mouse_x = device_mouse_x(0);
var _mouse_y = device_mouse_y(0);
var click = device_mouse_check_button_pressed(0, mb_left);

if (character_blink_eye) {
    if (image_index &lt; 3) {
        image_index += 0.25;
    }else {
        image_index = 0;
        character_blink_eye = 0;
    }
}

if (instance_exists(o_room_changer)) exit;

if (!character_touch &amp;&amp; click &amp;&amp; point_in_rectangle(_mouse_x, _mouse_y, left + character_x - 65, top + character_y - 275, left + character_x + 65, top + character_y)) {
    character_blink_eye = 0;
    character_sleep = 0;
    alarm[2] = character_sleep_timer;
    character_touch = 1;
    alarm[3] = character_touch_timer;
    character_spr = choose(spr_character_blush, spr_character_suprised);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 스케줄 버튼
var click = device_mouse_check_button_pressed(0, mb_left);
var _mouse_x = device_mouse_x(0);
var _mouse_y = device_mouse_y(0);

mask_index = spr_main_schedule;
x = schedule_x;
y = schedule_y;

if click &amp;&amp; collision_point(_mouse_x, _mouse_y, self, 1, 0) {
    room_goto(r_select);
}

mask_index = noone;
x = xprevious;
y = yprevious;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// background

draw_set_alpha(1);
draw_sprite(spr_main_room, max(global.cleared - 1, 0), left, top);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw character

if (character_sleep) character_spr = spr_character_sleepy;
if (character_touch) image_index = !round(alarm[3] / character_touch_timer * 0.8);
draw_sprite(character_spr, image_index, left + character_x, top + character_y);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// UI
draw_set_color($212121);
draw_set_alpha(1);

draw_sprite(spr_main_date,0,0,15);

draw_set_font(f_namsan_header);
draw_set_halign(fa_center);
draw_set_valign(fa_top);

draw_text_transformed(145, 40, string(global.week) + '주차', 1, 1, 0);

draw_set_font(f_namsan_general);

draw_sprite(spr_twowitch_status, 0, room_width - 5, 15);
draw_sprite_ext(spr_emoji_rank, get_twowitch_grade(), room_width - 295, 18, 0.5, 0.5, 0, c_white, 1)

draw_text_transformed(room_width - 150, 95, string(global.subscribers) + '명', 1, 1, 0);
draw_text_transformed(room_width - 150, 95 + 67, string(global.likes) + '개', 1, 1, 0);
draw_text_transformed(room_width - 150, 95 + 67*2, string(global.antifans) + '명', 1, 1, 0);

// 텍스트바
//draw_window(spr_textbar, 0, 144, room_height - 200, room_width - 144*2, 94);
//draw_window(spr_textbar, 0, 154, room_height - 96, room_width - 154*2, 68);

draw_sprite(spr_main_schedule, 0, schedule_x, schedule_y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
