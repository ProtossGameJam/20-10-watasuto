<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();

mode = 0; // 0 = 일반 대사, 1 = 질문, 2 = 답변, 3 = 반응
anim1 = 0;
anim2 = 0;
animF = 0;
history[0] = -1;
answered = 0;

line = 0;
char = 0;
transcript = '';
answer = array_create(3);
correct = array_create(3);
image_single = 0;

lines[0] = '시청자 여러분 하이하이~ 오늘 해볼 것은...';
lines[1] = '제가 방송을 시작한 지 벌써 7주째예요!';
lines[2] = '그래서 7주차 기념 Q&amp;A 코너를 준비해봤으니까 질문 많이 해주세요~';
lines[3] = '질문은 도네로... 앗! 벌써 질문이 들어왔어요~';
lines[4] = '첫 번째 질문!';
lines[5] = '`[질문 1]`A`1`B`0`';
lines[6] = '두 번째 질문이 바로 들어왔네요~ 어디어디...';
lines[7] = '`[질문 2]`A`1`B`0`';
lines[8] = '으악, 질문이 연달아서 오고 있어요! 빨리 확인해볼게요!';
lines[9] = '`[질문 3]`A`1`B`0`';
lines[10] = '그럼 다음 질문도 빠르게 확인해보겠습니다!';
lines[11] = '`[질문 4]`A`1`B`0`C`1`';
lines[12] = '다음 질문은 조금 어려워 보이는데...';
lines[13] = '`[질문 5]`A`1`B`0`';
lines[14] = '이렇게 질문이 많이 들어올 줄 몰랐는데... 정말 감사해요!';
lines[15] = '`[질문 6]`A`1`B`0`';
lines[16] = '질문 한 번만 더 받구 방송 종료할게요~';
lines[17] = '`[질문 7]`A`1`B`0`';
lines[18] = '그래도 조금 미련이 생기니까 정말 마지막으로 한 번만 더 받아볼까요?';
lines[19] = '...';
lines[20] = '좋아요! 정말 마지막 질문! 어디보자...';
lines[21] = '`[질문 8]`A`1`B`0`C`1`';
lines[22] = '오늘 방송 봐주셔서 너무 감사해요! 7주라는 긴 시간 동안 정말 즐거웠어요!';
lines[23] = '옆에서 많이 도와주셨던 매니저님도... 정말 감사하고 있어요!';
lines[24] = '앞으로도 잘 부탁드려요!';
lines[25] = '그럼 구독과 좋아요~ 알림 설정까지 꼭 부탁드려요~ 바이바이!';
response[0] = '으아... 질문이 너무해요!';
response[1] = '(앗... 잘못 대답했나 봐...)';
response[2] = '다메다메~ 다메요~~~((((；′д｀)))';
response[3] = '(후훗! 대답이 정해져 있는 질문이었는걸.)';
response[4] = '재밌는 질문이었습니다!';
response[5] = '우효~~ 겟또다제q(≧▽≦q)';

transcript = lines[0];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var
   click = mouse_check_button_released(mb_left),
   next =
      mouse_check_button_pressed(mb_left) ||
      keyboard_check_pressed(vk_space) ||
      keyboard_check_pressed(vk_enter),
   len = string_length(transcript);

switch(mode) {
   default:
      if(next)
         if(char &lt; len)
            char = len;
         else {
            line++;
            char = 0;
            image_single = 0;
            if(line == array_length_1d(lines)) // end of qna
               room_goto(r_main);
            else if(string_char_at(lines[line], 1) == '`') { // question?
               mode = 1;
               qna_decode(lines[line]);
            } else
               transcript = lines[line];
         }
   break;
   case 1:
      if(click) {
         var sel = -1;
         if(mouse_y &gt;= 226 &amp;&amp; mouse_y &lt; 336) {
            if(mouse_x &gt;= 69 &amp;&amp; mouse_x &lt; 379)
               sel = 0;
            else if(mouse_x &gt;= 901 &amp;&amp; mouse_x &lt; 1211)
               sel = 1;
         } else if(
            true &amp;&amp; // replaying?
            correct[2] != -1 &amp;&amp; // available?
            mouse_y &gt;= 349 &amp;&amp; mouse_y &lt; 459 &amp;&amp;
            mouse_x &gt;= 127 &amp;&amp; mouse_x &lt; 437
         ) // 3rd choice
            sel = 2;
         
         if(sel != -1) {
            history[answered++] = sel;
            transcript = answer[sel] + '!';
            mode = 2;
         }
      }
   break;
   case 2:
      if(next)
         if(char &lt; len)
            char = len;
         else {
            var yes = correct[history[answered - 1]] == 1;
            char = 0;
            transcript = response[irandom_range(3*yes, 3*yes + 2)];
            image_single = irandom_range(2*yes + 1, 2*yes + 2);
            mode = 3;
         }
   break;
}

if(char != len)
   char = min(len, char + 0.75);

animF += ((mode == 1) - animF)/4;
if(mode != 1) {
   anim2 -= anim2/8;
   anim1 = anim2;
} else {
   anim1 += (1 - anim1)/12;
   anim2 += (anim1 - anim2)/12;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var
   scale = (4 + animF)/5,
   replay = true,
   thirdSpr = spr_qna_button3;
if(replay)
   thirdSpr = spr_qna_button1;

draw_set_colour($ffffff);
draw_set_alpha(1);

draw_sprite(spr_qna_character, image_index, lerp(456, 647, anim2), 561);
draw_sprite(spr_qna_table, 0, 0, room_height);
draw_sprite_ext(
   spr_qna_chat, 0,
   1013, 358,
   (3 - animF)/3, (3 - animF)/3, 0,
   $ffffff, 1 - animF
);

draw_set_colour($000000);
draw_set_font(f_nanumgothic);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_alpha(animF);

draw_sprite_ext(
   spr_qna_button1, 0,
   314, 383,
   scale, scale, 0,
   $ffffff, animF
);
draw_text_transformed(
   314 - 90*scale, 383 - 102*scale,
   answer[0],
   scale, scale, 0
);

draw_sprite_ext(
   spr_qna_button2, 0,
   966, 383,
   scale, scale, 0,
   $ffffff, animF
);
draw_text_transformed(
   966 + 90*scale, 383 - 102*scale,
   answer[1],
   scale, scale, 0
);

if(replay &amp;&amp; correct[2] != -1) {
   draw_sprite_ext(
      thirdSpr, 0,
      372, 506,
      scale, scale, 0,
      $ffffff, animF
   );
   draw_text_transformed(
      372 - 90*scale, 506 - 102*scale,
      answer[2],
      scale, scale, 0
   );
}

draw_set_alpha(1);

if(mode != 1) {
   var len = string_length(transcript);

   draw_set_halign(fa_left);
   draw_set_valign(fa_top);
   draw_window_ext(spr_textbar, 0, 54, 467, 676, 202, $ffffff, 0.65);
   draw_text(
      78, 491,
      string_copy(transcript, 1, floor(min(len, char + 1)))
   );
   if(char == len)
      draw_sprite(spr_cutscene_continue, 0, 706, 645);
} else {
   draw_set_colour($ffffff);
   draw_set_font(f_murukmuruk);
   draw_text(640, 616, 'Q. ' + question);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
