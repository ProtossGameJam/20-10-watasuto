<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.storyMode = false;

// titleState = 0;
// 0 = 최초 상태, 1 = 새 게임/불러오기 (미구현), 2 = 스토리/무한모드 선택
// 나중에 다시 구현해야
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*var
   any = mouse_check_button_pressed(mb_any) || keyboard_check_pressed(vk_anykey),
   left = keyboard_check_pressed(vk_left), right = keyboard_check_pressed(vk_right);

switch(titleState) {
   case 0:
      if(any)
         titleState = 1;
   break;
   case 1:
      if(left || right)
         titleState = 2;
   break;
   case 2:
      if(left || right) {
         if(left)
            global.storyMode = false;
         else
            global.storyMode = true;
         room_goto(r_story);
      }
   break;
}*/

if(keyboard_check_pressed(vk_anykey))
   room_goto(r_story);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*draw_set_color($000000);
draw_set_alpha(1);
draw_set_font(f_nanumgothic);
draw_set_halign(fa_left);
draw_set_valign(fa_top);

draw_text(8, 8, "와타스토 임시 시작 화면!");
switch(titleState) {
   case 0:
      draw_text(8, 48, "PRESS ANY KEY");
   break;
   case 1:
      draw_text(8, 48, "아직 임시 화면이니까 좌우 방향키로 둘 중에 하나 골라주세요");
      draw_text(8, 68, "← 새 게임 / 불러오기 (미구현) →");
   break;
   case 2:
      draw_text(8, 48, "아직 임시 화면이니까 좌우 방향키로 둘 중에 하나 골라주세요");
      draw_text(8, 68, "← 스토리 모드 / 무한 모드 →");
   break;
}*/

draw_sprite(spr_title_anykey, 0, room_width - 32, room_height - 32);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
